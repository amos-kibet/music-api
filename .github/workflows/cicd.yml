name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.

name: Fly Deploy
on: [push]
on: [pull_request]
env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  deploy:
      name: Deploy app
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: superfly/flyctl-actions/setup-flyctl@master
        - run: flyctl deploy --remote-only

# on: push

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false

#     services:
#       mysql:
#         image: mysql
#         env:
#           DB_NAME: mysic_users
#           DB_PASS: 1234
#           DB_USER: root
#         ports:
#           - 3306:3306
#       - name: Setup Flask App
#         working-directory: ./python
#         run: make setup
#       - name: Run tests
#         run: |
#           cp -R test/support/pdfs python/test/support/pdfs 
#           make setup mix_env=test
#           make tests
